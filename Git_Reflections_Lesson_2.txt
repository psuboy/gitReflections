 
Lesson 2:  creating a repsoistory

to start a new Git repository need to either clone or run:
git init

another command: git status will give you status of git. 

first you do "git init"
second you run "git add fileName"
Add is kind of a middle work area before it is committed

then you run "git commit"
This will commit all changes.  It will pull up your text editor and you will be able to enter your commit message.  
Alternatively you can run "git commit -m <msg>" directly from the command line.  This will add your message directly.  You can use multiple -m and it will concatenate them in messages.

Key concept:  If you make a change in your working directory it does not change your Staging area nor does it change your any commits in your repository.

Running "git diff" with no arguments will give you the changes you introduced to files in your working directory and your staging area.  

you can then run "git add <fileName>" to move any files you want to place in staging area for commiting to your repository.  

Then you can run your commit and commit those changes to your repository.  Note, you don't have to add all files you changed in working directory to the staging area.  

can then run: git commit  

Branching: 
You can create multiple versions in parellel with branching.  
To see what branches are available you can type: git branch
To create a new branch type: git branch <newBranchName>

Merging branches:   To merge branches you can use the merge command.
Merge command: git merge branch2 <additional branches optional>

Note:  it will complare the two branches you want to combine the two branches.  It is important to make note of which branch you currently have checked out.  If you have BranchA checked out and run the command:
git merge branchB branchC you will merge branches A,B,and C...not just branches B and C.

to delete old branch you just merged:
git branch -d OldMergedBranch

to see just changes of a single commit vs. it's parent use the show command:
git show "commitID"

Fixing Merge Conflicts:
IF you get a conflict you will get the changes added to git with lines that have >>>>>, ||||||, ======. and <<<<<< 
these seperate 3 sections.  Head, ansester and Merged branch. 
Make the changes you need and then save, add and commit.

